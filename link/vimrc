" Store as ~/.emacs
" Andrew Z Allen

set nocompatible

" Vim Helpers {{{

" Map , to \ to allow multiple leaders
nmap , \

nnoremap <leader>ve :edit ~/.vimrc<cr>
nnoremap <leader>vs :source ~/.vimrc<cr>
" }}}
" Vundle {{{
" https://github.com/gmarik/vundle
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
let g:vundle_default_git_proto = 'git'
Plugin 'gmarik/vundle'

" Git plugin
Plugin 'tpope/vim-fugitive'
nnoremap <leader>gw :Gwrite<cr>

" Install some sane defaults
Plugin 'tpope/vim-sensible'

" Smart handling of paste (Auto set paste, powered by 'bracketed paste')
Plugin 'ConradIrwin/vim-bracketed-paste'

" Load plugins
Plugin 'tomasr/molokai'
Plugin 'vim-ruby/vim-ruby'
Plugin 'derekwyatt/vim-scala'

" Install a plugin that lets you load a file:linenumber:column combo
Bundle 'bogado/file-line'

" CtrlP
Plugin 'kien/ctrlp.vim'

call vundle#end()
" Confiure plugins
colorscheme molokai
" }}}
" tmux navigator {{{
Bundle 'christoomey/vim-tmux-navigator'

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
" }}}
" Redraw keyboard shortcut {{{
noremap <C-a> :redraw!<CR>
" }}}
" Vim UI {{{
" Turn on line numbers
set number

" Set reasonable tab settings
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

" Highlight the current line
set cursorline

" Ignore case (in search) when pattern is lowercase
set smartcase

" Turn on modelines
set modelines=1

" Only redraw when absolutely necessary
set lazyredraw

" Show matching characters ([{}])
set showmatch

" Turn on syntax highlighting
syntax on
filetype plugin indent on     " required! (for Vundle)

" When navigating over word wrapped lines, navigate by column instead of row
nnoremap j gj
nnoremap k gk

" Remap ; so :
nnoremap ; :

" Save to system clipboard
set clipboard=unnamedplus
" }}}
" Search {{{
" Incremental search
set incsearch

" Highlight as searching
" This will keep the highlighting active until disabled
set hlsearch

" CtrlP search settings
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" When invoked, unless a starting directory is specified, CtrlP will set its
" local working directory according to this variable:
" 'c' - the directory of the current file.
" 'r' - the nearest ancestor that contains one of these directories or files:
"     .git .hg .svn .bzr _darcs
" 'a' - like c, but only if the current working directory outside of CtrlP is
"     not a direct ancestor of the directory of the current file.
" 0 or '' (empty string) - disable this feature.
let g:ctrlp_working_path_mode = 'ra'

" Exclude unintereesting files
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

nnoremap <leader>. :CtrlPTag<cr>

" }}}
" Tmux {{{
" When in insert mode in Tmux use a better cursor symbol (narrow insert)
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif
" }}}
" Backups {{{
" I hate backups in vim, they frequently tell you how they saved this file
" (thanks?) and now you must take action every time you open it to decide if
" you want the backup or not. How about we just use git.
set nobackup
set noswapfile
" }}}
" Whitespace character rendering {{{
" use » to mark Tabs and ° to mark trailing whitespace. This is a
" non-obtrusive way to mark these special characters.
set list listchars=tab:»\ ,trail:°
" }}}
" Vim Hard Mode {{{
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
" }}}
" Powerline {{{
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

"python from powerline.vim import setup as powerline_setup
"python powerline_setup()
"python del powerline_setup

set laststatus=2
" }}}
" Syntastic {{{

" Syntastic
Bundle 'scrooloose/syntastic'

let g:syntastic_check_on_open=1
let g:syntastic_javascript_checkers = ['gjslint']
let g:syntastic_full_redraws=1

nnoremap <leader>l :SyntasticCheck<CR>

" }}}
" Navigation options {{{
" Change to the current dir on open
autocmd BufEnter * silent! lcd %:p:h
" }}}
" Spell check {{{
set spell spelllang=en_us
" }}}
" YouCompleteMe {{{
Bundle 'Valloric/YouCompleteMe'
" }}}
" Paste without pain {{{
" Pasting by default overwrites the buffer. This remaps it to not
xnoremap p pgvy
"
" }}}

" Load the local vim config
source ~/.vimrc_local

" vim:foldmethod=marker:foldlevel=0
